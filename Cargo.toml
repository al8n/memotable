[package]
name = "memorable"
version = "0.1.1"
edition = "2021"
repository = "https://github.com/al8n/memorable"
homepage = "https://github.com/al8n/memorable"
documentation = "https://docs.rs/memorable"
description = "Lock-free, ordered and multiple version memory table for key-value databases."
license = "MIT OR Apache-2.0"
rust-version = "1.81"
keywords = ["memory-table", "mvcc", "memtable"]
categories = ["data-structures", "database-implementations", "development-tools", "no-std"]

[[bench]]
path = "benches/foo.rs"
name = "foo"
harness = false

[features]
default = ["unbounded", "bounded", "memmap"]
alloc = ["dbutils?/alloc", "skl?/alloc"]
std = ["crossbeam-skiplist-mvcc?/std", "dbutils?/std", "either/default"]
unbounded = ["std", "crossbeam-skiplist-mvcc"]
bounded = ["alloc", "dbutils", "skl"]

memmap = ["std", "skl/memmap"]
experimental = ["skl?/experimental"]

[dependencies]
crossbeam-skiplist-mvcc = { version = "0.4", optional = true, default-features = false }
dbutils = { version = "0.11", default-features = false, optional = true }
either = { version = "1", default-features = false }
ref-cast = "1"
skl = { version = "0.20", default-features = false, optional = true }

[dev-dependencies]
criterion = "0.5"
tempfile = "3"

[profile.bench]
opt-level = 3
debug = false
codegen-units = 1
lto = 'thin'
incremental = false
debug-assertions = false
overflow-checks = false
rpath = false

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]

[lints.rust]
rust_2018_idioms = "warn"
single_use_lifetimes = "warn"
unexpected_cfgs = { level = "warn", check-cfg = [
  'cfg(all_tests)',
] }
